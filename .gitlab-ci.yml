#image: docker:23.0.1
image: maven:3.9.9-eclipse-temurin-23-alpine

services:
  - docker:20.10.16-dind

variables:
  DOCKER_DRIVER: overlay2
  MAVEN_OPTS: >-
    -Dhttps.protocols=TLSv1.2
    -Dmaven.repo.local=$CI_PROJECT_DIR/.m2/repository
    -Dorg.slf4j.simpleLogger.showDateTime=true
    -Djava.awt.headless=true
  MAVEN_CLI_OPTS: >-
    --batch-mode
    --errors
    --fail-at-end
    --show-version
    --no-transfer-progress
  # Instruct Testcontainers to use the daemon of DinD.
  DOCKER_HOST: "tcp://docker:2375"
  #  DOCKER_HOST: "tcp://127.0.0.1:39751"
  # Instruct Docker not to start over TLS.
  DOCKER_TLS_CERTDIR: ""
  # Improve performance with overlayfs.
  GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task



stages:
  - test
  - build
  - package
  - deploy

cache:
  paths:
    - .m2/repository
    - target

before_script:
  - apt-get update && apt-get install -y curl bash
  - echo "MAVEN_CLI_OPTS=$MAVEN_CLI_OPTS"
  - echo "MAVEN_OPTS=$MAVEN_OPTS"

test_containers:
  image: maven:3-eclipse-temurin-23-alpine
  stage: test
  script:
    - apt-get update && apt-get install -y curl bash
    - curl -fsSL https://app.testcontainers.cloud/bash | bash
    - "mvn clean test"
  only:
    - main
    - test-containers

maven-build:
  image: maven:3-eclipse-temurin-23-alpine
  stage: build
  script: "mvn clean package"
  only:
    - test-containers

## Use https://github.com/sj26/rspec_junit_formatter to generate a JUnit report format XML file with rspec
ruby:
  stage: test
  script:
    - bundle install
    - bundle exec rspec --format progress --format RspecJunitFormatter --out rspec.xml
  artifacts:
    when: always
    paths:
      - rspec.xml
    reports:
      junit: rspec.xml
